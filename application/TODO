devops:
    ☐  npm function for copying env to vercel

Onboarding:
    ☐ create onboarding page
    ☐ define steps and fields to collect
    ☐ implement form
    ☐ update user obj with form data

Uptime HTTP:
    ☐  design dashboard to show HTTP settings + alerts
    ☐  follow http redirects
    ☐  pause function

API service:
    ☐  set up repo and deploy to vercel


Projects:
    CDK:
        ✔ create project dbs, ownerId pk, proj id sk @done(22-01-25 14:39)
        ✔ create LSI on monitors,  sk = proj id @done(22-01-24 13:25)
    WebApp: 
        api:
            ✔ create project API @done(22-01-24 13:25)
            ✔ update project settings @done(22-01-24 13:25)
            ✔ delete project @done(22-01-24 13:25)
            ✔ get user projects @done(22-01-24 13:25)
        monitor:
            ✔ assign to project in create update form using hook @done(22-01-26 12:25)
            ✔ implement permissions checks @done(22-01-26 12:25)
            ✔ transfer monitor from project @done(22-01-26 10:18)
            ✔ edit monitor @done(22-01-26 14:42)
        SideBar:
                ✔  indicate personal account @done(22-01-25 14:39)
                ✔  project selection @done(22-01-24 13:26)
        ✔ get user projects @done(22-01-24 13:27)
        ✔ get monitors for project @done(22-01-24 13:27)
        ✔  slack must work @done(22-01-30 14:56)
        ✔  design project index page and tabs @done(22-01-31 11:47)
        ✔  fix the header size @done(22-01-25 10:08)
        ✔ header add links to proiject and monitor @done(22-01-29 13:31)
        ✔ delete projects for user when user deleted @done(22-01-30 14:06)
        ✔ update pricing and landing page + limiters @done(22-01-30 13:50)
        ☐ rewrite docs
        ✔ limit project creation on free accounts @done(22-01-30 15:39)
        ✘ view sample status in landing @cancelled(22-01-30 15:39)
        ☐ weekly report emails -> cdk changes if necc

------------------------------------------------------------------------------------------

Uptime Assertions:
    ☐ form changes, if no checks default to 200 OK and make it clear to user
    ☐ implement uptime monitor first -> if no assertions -> default -> else -> run assertion

Usage Tab:
    ☐ 

Webhooks:
    ☐ design

------------------------------------------------------------------------------------------

Stripe:
    ☐ change freelancer plan to startup
Webapp: 
       
        
    Alert Invocations:
        ✔ implement get handler @done(21-10-07 14:56)
    UI:
        ☐ refactor page layout
        ✔ Style the email verification email @done(21-10-11 14:14)
        ✔ change hover color for create buttons and go to app button @10/22 @done(21-10-18 14:37)
        ☐ view invocation object modal when clicked on in invocation tables

        ☐  convert service SLA's to monitor resolutions SRE p62\


        ✘  new user onboarding -> ask what they'll use for @cancelled(22-01-12 20:17)
        ☐  add no alert warning to monitor creation form + overview page
    API: 
        ☐ check if subscriptions are valid in API's

    Webhook Alerts: 
        ☐ initial design
    SNS Topic Alerts:
        ☐ scope possibility

    SEO:

    Delete by user id:

        ☐  verify
    Website View:
        ✘  scope @cancelled(22-01-28 22:28)
    custom status pages: 
        ☐  scope
    teams: 
        ☐  scope

Customer Serve:
    ☐ notification for new users -> email template

Teams:
    ☐ scope teams

API:
    ☐ research rate limiting
    ☐ API server design (api.komonitor.com)
    API keys:
        ☐ design api key creation, storage, etc.
        ☐ research what header API keys are sent in




TEAMS: 
    ☐  search todos






Blog: 
    ☐ Ecommerce use case - high latency -> lost revenue
    ☐ Buy vs. build -> time spent on product vs. infra
    ☐ Monitoring tenets -> SRE chapter
    ☐ Twitter alert use case -> better comm with users + public

Website change monitoring:
    ☐ scope

Lighthouse:
    ✔ get hello world app running and push to ECR working @done(21-12-06 13:05)
    ✔ cdk setup DDB table in dev and prod @done(21-12-06 16:50)
    ☐ cdk Faargate task role https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ecs/modules/taskdefinition.html#taskrolearn
    ☐ create execution role arn https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ecs/modules/taskdefinition.html#executionrolearn
    Job runner: 
        ☐ read job from db
        ☐ create and register task def from db
        ☐ startTask
        ☐ dereg task def -> check if can dereg during run
    ☐ cdk setup S3 bucket
    ☐ remove lighthouse pricing impl


Bugs: 
    ☐  Warning: Prop `id` did not match. Server: "accordion-button-2" Client: "accordion-button-4" on FAQ page
    ☐  Alert invocation table can link to non existant monitor, -> fetch to see if mon exists before constructing link
    ☐  Remove aws-cdk package by rewriting nextauth ddb client
    ☐  upgrade nextauth
    ☐  get rid of hypernext
    ☐  keyed mutates
     ☐ make monitor url unchangeable, it messes up stats 
     ☐  get rid of uptime monitor jobs
     ☐ add sweden to cdk
    ☐  consolidate useUser hooks to one api call
    ☐  consolidate db logic into one package
    ☐  color mode does not persits from docs to any other page -> check provider

☐ product gif generation