
Uptime HTTP:
    ☐  design dashboard to show HTTP settings + alerts
    ✔  follow http redirects @done(22-01-31 13:20)
    ✔  pause function @done(22-01-31 13:58)

☐ tw space hosting tools


Usage Tab:
    ☐ project usage
    ☐ monitor usage
    ☐ unlock x by upgrading

Teams:
    ✔ create new team in app header @done(22-02-16 15:25)
    auth:
        ✘  team obj in db is source of truth for members -> implement an auth when accessing all routes on teams/{teamId} (middleware?????) ->  updgrade nextauth @cancelled(22-02-16 23:53)
        ✔ eval need for team provider @done(22-02-22 09:54)
        
    creation:
        ✘ /teams/new @cancelled(22-02-21 21:09)
        ✔ form for team name (id), submit writes new team to db set user as admin, check if name exists first, make clear that need to pay @done(22-02-21 17:23)
        ✔ after successful creation , create stripe subscription with trial @done(22-02-21 21:09)
        ✔ create checkout api for teams @done(22-02-21 10:56)
        ✔ redirect to teams/{new team} after successful checkout @done(22-02-20 19:35)
        ☐ subscription must be valid to use team
        ✘ create team on checkout complete, provision on invoice paid @cancelled(22-02-21 20:32)
    invites:
        ☐ api setup
        create and send invite:
            ☐ create unique code and associate input email in team db with role -> set expiration
            ☐ send email with link to invite api to add user if account created
        add invited user api:
            ☐ if user logged in (user in session) -> add user to team if expiration valid
            ☐ if user not logged in -> redirect to sign in page -> prompt them to click link again
            ☐ if user successfully added -> delete invite and code in team db
        remove user from team:
            ☐ admin permission
            ☐ delete user id from team db, delete team from user 
    settings:
        ☐ add, remove invites
        ☐ add, remove teammates
        ☐ customer portal only available to admin
        ☐ webhook secret
        ☐ delete team cancels subscription and then deletes team
        ✔ project settings - rename and delete @done(22-02-28 10:15)
    uptime monitors:
        ✔ make sure creation works like projects @done(22-02-24 22:54)
    integrations:
        ✔ adding slack integrations work @done(22-02-23 12:24)
        ✔ removing integ works for both teams and user @done(22-02-23 13:08)
        ✔ loading when add slack button press @done(22-02-23 13:10)
        ✔  test updating channel slack @done(22-02-23 12:20)
    alert and uptime lambda:
        ✔ make sure we get correct webhook -> check if owner is a team @done(22-02-24 13:52)
        ☐ test
    delete:
        ☐  admin role
        ☐  delete team from users
        ☐  delete projects and assets
        ☐  delete stripe sub
    

✘ pause function graph weirdness @cancelled(22-02-01 12:29)

✔ scope demo page @done(22-02-02 22:38)

Demo:
    ☐  set up demo route
    ☐  create demo project, monitors, and api for getting resources

☐ scope status pages
Status Pages:
    ☐ status page table
    ☐ scope private, public
    ☐ define core fields, 

☐  axiom logging

☐ increase data retention and view for free plan to 90 days

☐ pricing page

☐ pause button confirmation when pausing

☐ email after sign up with guide


------------------------------------------------------------------------------------------

Onboarding:
    ☐ create onboarding page
    ☐ welcome page
    define steps and fields to collect:
        ☐ where did you hear about Komonitor - Google, IndieHackers, Twitter, Reddit, word of mouth, Other
        ☐ name
        ☐ use case - Monitoring a production app/website, monitoring an API, Just looking a around
    ☐ implement form
    ☐ update user obj with form data

Sign up email:
    ☐ simplify like uptime robot

Stripe:
    ✔ change freelancer plan to pro @done(22-02-16 21:58)
    ✔ change free to starter @done(22-02-16 21:58)
Webapp: 
       
        
    Alert Invocations:
        ✔ implement get handler @done(21-10-07 14:56)
    UI:
        ☐ refactor page layout
        ✔ Style the email verification email @done(21-10-11 14:14)
        ✔ change hover color for create buttons and go to app button @10/22 @done(21-10-18 14:37)
        ☐ view invocation object modal when clicked on in invocation tables

        ☐  convert service SLA's to monitor resolutions SRE p62\


        ✘  new user onboarding -> ask what they'll use for @cancelled(22-01-12 20:17)
        ☐  add no alert warning to monitor creation form + overview page
    API: 
        ☐ check if subscriptions are valid in API's

    Webhook Alerts: 
        ☐ initial design
    SNS Topic Alerts:
        ☐ scope possibility

    SEO:

    Delete by user id:

        ☐  verify
    Website View:
        ✘  scope @cancelled(22-01-28 22:28)
    custom status pages: 
        ☐  scope
    teams: 
        ☐  scope

Customer Serve:
    ☐ notification for new users -> email template

Teams:
    ☐ scope teams

API:
    ☐ research rate limiting
    ☐ API server design (api.komonitor.com)
    API keys:
        ☐ design api key creation, storage, etc.
        ☐ research what header API keys are sent in




TEAMS: 
    ☐  search todos






Blog: 
    ☐ Ecommerce use case - high latency -> lost revenue
    ☐ Buy vs. build -> time spent on product vs. infra
    ☐ Monitoring tenets -> SRE chapter
    ☐ Twitter alert use case -> better comm with users + public

Website change monitoring:
    ☐ scope

Lighthouse:
    ✔ get hello world app running and push to ECR working @done(21-12-06 13:05)
    ✔ cdk setup DDB table in dev and prod @done(21-12-06 16:50)
    ☐ cdk Faargate task role https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ecs/modules/taskdefinition.html#taskrolearn
    ☐ create execution role arn https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ecs/modules/taskdefinition.html#executionrolearn
    Job runner: 
        ☐ read job from db
        ☐ create and register task def from db
        ☐ startTask
        ☐ dereg task def -> check if can dereg during run
    ☐ cdk setup S3 bucket
    ☐ remove lighthouse pricing impl


Bugs: 
    ☐  Warning: Prop `id` did not match. Server: "accordion-button-2" Client: "accordion-button-4" on FAQ page
    ☐  Alert invocation table can link to non existant monitor, -> fetch to see if mon exists before constructing link
    ☐  Remove aws-cdk package by rewriting nextauth ddb client
    ✔  upgrade nextauth @done(22-02-15 15:40)
    ☐  get rid of hypernext
    ☐  keyed mutates
     ☐ make monitor url unchangeable, it messes up stats 
     ☐  get rid of uptime monitor jobs
     ☐ add sweden to cdk
    ☐  consolidate useUser hooks to one api call
    ☐  consolidate db logic into one package
    ☐  color mode does not persits from docs to any other page -> check provider
    ☐ encrypt decrpyt webhook secrets in db
   

☐ product gif generation